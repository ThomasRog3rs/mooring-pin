/* tslint:disable */
/* eslint-disable */
/**
 * AquaTrail_Data
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  NewMarinaSuggestionModel,
  SuggestionResponseModel,
  UpdateMarinaSuggestionModel,
} from '../models/index';
import {
    NewMarinaSuggestionModelFromJSON,
    NewMarinaSuggestionModelToJSON,
    SuggestionResponseModelFromJSON,
    SuggestionResponseModelToJSON,
    UpdateMarinaSuggestionModelFromJSON,
    UpdateMarinaSuggestionModelToJSON,
} from '../models/index';

export interface SuggestionMarinaSuggestionsAddPostRequest {
    newMarinaSuggestionModel?: Omit<NewMarinaSuggestionModel, 'id'|'sessionId'|'submissionTimeStamp'>;
}

export interface SuggestionMarinaSuggestionsUpdatePostRequest {
    updateMarinaSuggestionModel?: Omit<UpdateMarinaSuggestionModel, 'id'|'sessionId'|'submissionTimeStamp'>;
}

/**
 * 
 */
export class SuggestionApi extends runtime.BaseAPI {

    /**
     */
    async suggestionMarinaSuggestionsAddPostRaw(requestParameters: SuggestionMarinaSuggestionsAddPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuggestionResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/Suggestion/marina/suggestions/add`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: NewMarinaSuggestionModelToJSON(requestParameters['newMarinaSuggestionModel']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SuggestionResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async suggestionMarinaSuggestionsAddPost(requestParameters: SuggestionMarinaSuggestionsAddPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuggestionResponseModel> {
        const response = await this.suggestionMarinaSuggestionsAddPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async suggestionMarinaSuggestionsUpdatePostRaw(requestParameters: SuggestionMarinaSuggestionsUpdatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuggestionResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/Suggestion/marina/suggestions/update`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateMarinaSuggestionModelToJSON(requestParameters['updateMarinaSuggestionModel']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SuggestionResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async suggestionMarinaSuggestionsUpdatePost(requestParameters: SuggestionMarinaSuggestionsUpdatePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuggestionResponseModel> {
        const response = await this.suggestionMarinaSuggestionsUpdatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
