/* tslint:disable */
/* eslint-disable */
/**
 * AquaTrail_Data
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GeoJsonProperties } from './GeoJsonProperties';
import {
    GeoJsonPropertiesFromJSON,
    GeoJsonPropertiesFromJSONTyped,
    GeoJsonPropertiesToJSON,
    GeoJsonPropertiesToJSONTyped,
} from './GeoJsonProperties';
import type { GeoJsonGeometry } from './GeoJsonGeometry';
import {
    GeoJsonGeometryFromJSON,
    GeoJsonGeometryFromJSONTyped,
    GeoJsonGeometryToJSON,
    GeoJsonGeometryToJSONTyped,
} from './GeoJsonGeometry';

/**
 * 
 * @export
 * @interface GeoJsonFeature
 */
export interface GeoJsonFeature {
    /**
     * 
     * @type {string}
     * @memberof GeoJsonFeature
     */
    type?: string | null;
    /**
     * 
     * @type {GeoJsonGeometry}
     * @memberof GeoJsonFeature
     */
    geometry?: GeoJsonGeometry;
    /**
     * 
     * @type {number}
     * @memberof GeoJsonFeature
     */
    id?: number;
    /**
     * 
     * @type {GeoJsonProperties}
     * @memberof GeoJsonFeature
     */
    properties?: GeoJsonProperties;
}

/**
 * Check if a given object implements the GeoJsonFeature interface.
 */
export function instanceOfGeoJsonFeature(value: object): value is GeoJsonFeature {
    return true;
}

export function GeoJsonFeatureFromJSON(json: any): GeoJsonFeature {
    return GeoJsonFeatureFromJSONTyped(json, false);
}

export function GeoJsonFeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeoJsonFeature {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'geometry': json['geometry'] == null ? undefined : GeoJsonGeometryFromJSON(json['geometry']),
        'id': json['id'] == null ? undefined : json['id'],
        'properties': json['properties'] == null ? undefined : GeoJsonPropertiesFromJSON(json['properties']),
    };
}

export function GeoJsonFeatureToJSON(json: any): GeoJsonFeature {
    return GeoJsonFeatureToJSONTyped(json, false);
}

export function GeoJsonFeatureToJSONTyped(value?: GeoJsonFeature | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'geometry': GeoJsonGeometryToJSON(value['geometry']),
        'id': value['id'],
        'properties': GeoJsonPropertiesToJSON(value['properties']),
    };
}

