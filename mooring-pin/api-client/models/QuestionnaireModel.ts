/* tslint:disable */
/* eslint-disable */
/**
 * AquaTrail_Data
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface QuestionnaireModel
 */
export interface QuestionnaireModel {
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireModel
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireModel
     */
    readonly submissionId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof QuestionnaireModel
     */
    questionNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireModel
     */
    questionName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireModel
     */
    questionType?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof QuestionnaireModel
     */
    questionOptions?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof QuestionnaireModel
     */
    answers?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireModel
     */
    readonly sessionId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof QuestionnaireModel
     */
    readonly requestTimestamp?: Date;
}

/**
 * Check if a given object implements the QuestionnaireModel interface.
 */
export function instanceOfQuestionnaireModel(value: object): value is QuestionnaireModel {
    return true;
}

export function QuestionnaireModelFromJSON(json: any): QuestionnaireModel {
    return QuestionnaireModelFromJSONTyped(json, false);
}

export function QuestionnaireModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuestionnaireModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'submissionId': json['submissionId'] == null ? undefined : json['submissionId'],
        'questionNumber': json['questionNumber'] == null ? undefined : json['questionNumber'],
        'questionName': json['questionName'] == null ? undefined : json['questionName'],
        'questionType': json['questionType'] == null ? undefined : json['questionType'],
        'questionOptions': json['questionOptions'] == null ? undefined : json['questionOptions'],
        'answers': json['answers'] == null ? undefined : json['answers'],
        'sessionId': json['sessionId'] == null ? undefined : json['sessionId'],
        'requestTimestamp': json['requestTimestamp'] == null ? undefined : (new Date(json['requestTimestamp'])),
    };
}

export function QuestionnaireModelToJSON(json: any): QuestionnaireModel {
    return QuestionnaireModelToJSONTyped(json, false);
}

export function QuestionnaireModelToJSONTyped(value?: Omit<QuestionnaireModel, 'id'|'submissionId'|'sessionId'|'requestTimestamp'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'questionNumber': value['questionNumber'],
        'questionName': value['questionName'],
        'questionType': value['questionType'],
        'questionOptions': value['questionOptions'],
        'answers': value['answers'],
    };
}

